#summary This page shows some code examples on the usage of this library.
#labels Featured,Phase-Implementation

= Introduction =

== Parsing ==

You can feed the `PropertyListParser` with a `File`, an `InputStream`s or a `byte` array.
The `parse` method of the `PropertyListParser` will parse the input and give you a `NSObject` as result. Generally this is a `NSDictionary`.

_Note: Only binary and XML property lists are supported. The deprecated ASCII format is not supported._

_Note: The support for UID objects is experimental_

You can then navigate the contents of the property lists using the various classes extending `NSObject`. These are modeled in such a way as to closely resemble the respective Cocoa classes.


== Creation ==
You can create your own property list using the various constructors of the different `NSObject` classes. You can then call the `toXMLPropertyList` method on the root object of your property list. It will give you a UTF-8 `String` containing the property list in XML format.

If you directly want to save your property list to a file, you can use the `saveAsXML` method of the `PropertyListParser` class.

_Note: Saving of binary property lists is not supported._

= Examples =

== Parsing ==

{{{
try {
  File file = new File("Info.plist");
  NSDictionary rootDict = (NSDictionary)PropertyListParser.parse(file);
  String name = rootDict.objectForKey("Name").toString();
  NSObject[] parameters = ((NSArray)rootDict.objectForKey("Parameters")).getArray();
  for(NSObject param:parameters) {
    if(param.getClass().equals(NSNumber.class) {
      NSNumber num = (NSNumber)param;
      switch(num.type()) {
        case NSNumber.BOOLEAN : {
          boolean bool = num.boolValue();
          //...
          break;
        }
        case NSNumber.INTEGER : {
          long l = num.longValue();
          //or int i = num.intValue();
          //...
          break;
        }
        case NSNumber.REAL : {
          double d = num.doubleValue();
          //...
          break;
        }
    } 
    // else...
  }
} catch(Exception ex) {
  ex.printStackTrace();
}
}}}

== Creation ==

{{{
//Creating the root object
NSDictionary root = new NSDictionary();

//Creation of an array of the length 2
NSArray people = new NSArray(2);

//Creation of the first object to be stored in the array
NSDictionary person1 = new NSDictionary();
person1.put("Name", "Peter");
person1.put("Age", 23);
person1.put("Photo", new NSData(new File("peter.jpg")));

//Creation of the second object to be stored in the array
NSDictionary person2 = new NSDictionary();
person2.put("Name", "Lisa");
person1.put("Age", 42);
person1.put("Photo", new NSData(new File("lisa.jpg")));

//Put the objects into the array
people.setValue(0, person1);
people.setValue(1, person2);

//Put the array into the property list
root.put("People", people);

//Save the propery list
PropertyListParser.saveAsXML(root, new File("people.plist"));
}}}